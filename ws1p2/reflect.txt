In oop244, I only saw the term extern in the professor's code, but I never used it myself. So I studied in the oop345 note and used it in this workshop, but I encountered an unexpected link error. It was a problem because in the header file I  defined it and the .cpp file did not declare it again. So, I corrected that part and studied extern and static again. If what I understand is correct, the static attached to the local variable cannot be used in other blocks or functions. It also resides in memory while the program is running and maintains its value even if it leaves the block. The static attached to the global variable is designated as a global variable used only within the file. If another file declares a global variable of the same name, only one is assigned and the rest is extern. However, when static is attached, it becomes a separate variable that can only be used in that file. Finally, an extern is a declaration that assumes that the variable will exist in another file. This does not actually take up memory as variables are declared. In addition, the compilation is possible only with an external declaration that the variable will be in another file, but I took my workshop as an example earlier. There is a  link error.