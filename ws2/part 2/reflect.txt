In fact, while studying this oop345, rvalue and lvalue was very confusing. Actually, it's still like that now. but now I even know that there are types of constructors. There are things that are move semantics and copy constructors, and in order to know this, we had to learn about lvalue, rvalue, and reference parameters. When I heard LValue and RValue, I wondered where the new concept came from. If you search for Lvalue and Rvalue, you can see that a lot of 'misunderstanding' is mentioned, but in the past, Lvalue was used as the left value and Rvalue was used as the right value.LValue refers to a value that exists for reuse. RValue refers to a value that disappears after being used once as a temporary value. And the same thing between move semantics and copy semantics is that they receive the same type of object as a factor and implant it into a newly created instance. But the difference is that in the case of copying, memory must be allocated for newly created instances for member variables, but you don't have to do it in the move. Therefore, the processing speed is faster than the copy constructor.